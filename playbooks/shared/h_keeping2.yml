# run playbook: ansible-playbook -i inventory logrotate_single.yml -e "app_name=jenkins"
# run playbook: ansible-playbook -i inventory logrotate_single.yml -e "app_name=sonarqube"
# run playbook: ansible-playbook -i inventory logrotate_single.yml -e "app_name=nexus"

---
- name: Configure log rotation for a single application
  hosts: all
  become: yes
  vars:
    default_max_size: 100M
    default_max_files: 3
    logrotate_configs:
      jenkins:
        path: /var/log/jenkins/jenkins.log
        user: jenkins
        group: jenkins
        postrotate: ## apps restart command ##
      sonarqube:
        path: /var/log/sonarqube/sonarqube.log
        user: sonarqube
        group: sonarqube
        postrotate: ## apps restart command ##
      nexus:
        path: /var/log/nexus/nexus.log
        user: nexus
        group: nexus
        postrotate: ## apps restart command ##
  tasks:
    # - name: PRE | Gather package facts
    #   package_facts:
    #     manager: auto

    # - name: PRE | Install logrotate on Debian-based systems
    #   apt:
    #     name: logrotate
    #     state: present
    #   when: ansible_facts.packages.logrotate is not defined and ansible_os_family == "Debian"

    # - name: PRE | Install logrotate on RedHat-based systems
    #   yum:
    #     name: logrotate
    #     state: present
    #   when: ansible_facts.packages.logrotate is not defined and ansible_os_family == "RedHat"

      - name: Configure logrotate for the specified application
            copy:
              dest: /etc/logrotate.d/{{ app_name }}
              content: |
                {{ logrotate_configs[app_name].path }} {
                    daily
                    rotate {{ max_files | default(default_max_files) }}
                    size {{ max_size | default(default_max_size) }}
                    compress
                    delaycompress
                    missingok
                    notifempty
                    create 0640 {{ logrotate_configs[app_name].user }} {{ logrotate_configs[app_name].group }}
                    sharedscripts
                    postrotate
                        /usr/bin/systemctl restart {{ app_name }} > /dev/null 2>/dev/null || true
                    endscript
            when: app_name in logrotate_configs