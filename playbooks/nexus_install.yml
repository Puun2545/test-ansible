- name: Install Nexus Repository Manager 3
  hosts: nexus_server
  become: yes
  become_user: nexus

  vars:
    nexus_version: "3.69.0-02"
    java_version: "17"
    nexus_download_url: "https://download.sonatype.com/nexus/3/nexus-{{ nexus_version }}-java{{ java_version }}-unix.tar.gz"
    nexus_install_dir: "/opt/nexus"
    nexus_data_dir: "/opt/sonatype-work"
    nexus_user: "nexus"

  tasks:
    - name: Install dependencies
      apt:
        name: 
          - wget
          - openjdk-{{ java_version }}-jdk
        state: present
        update_cache: yes

    - name: Create nexus user
      user:
        name: "{{ nexus_user }}"
        shell: /bin/bash

    - name: Download Nexus Repository Manager
      get_url:
        url: "{{ nexus_download_url }}"
        dest: "/tmp/nexus-{{ nexus_version }}-unix.tar.gz"

    - name: Create Nexus install directory
      file:
        path: "{{ nexus_install_dir }}"
        state: directory
        owner: "{{ nexus_user }}"
        group: "{{ nexus_user }}"

    - name: Extract Nexus Repository Manager
      unarchive:
        src: "/tmp/nexus-{{ nexus_version }}-unix.tar.gz"
        dest: "{{ nexus_install_dir }}"
        remote_src: yes
        creates: "{{ nexus_install_dir }}/nexus-{{ nexus_version }}"

    - name: Create a symbolic link to nexus
      file:
        src: "{{ nexus_install_dir }}/nexus-{{ nexus_version }}"
        dest: "{{ nexus_install_dir }}/nexus"
        state: link
        force: yes

    - name: Create Nexus data directory
      file:
        path: "{{ nexus_data_dir }}"
        state: directory
        owner: "{{ nexus_user }}"
        group: "{{ nexus_user }}"

    - name: Set permissions on Nexus directories
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ nexus_user }}"
        group: "{{ nexus_user }}"
        recurse: yes
      with_items:
        - "{{ nexus_install_dir }}/nexus"
        - "{{ nexus_data_dir }}"

    - name: Configure Nexus to run as nexus user
      lineinfile:
        path: "{{ nexus_install_dir }}/nexus/bin/nexus.vmoptions"
        line: "-Djava.io.tmpdir={{ nexus_data_dir }}"
        create: yes

    - name: Configure Nexus to use Java 17
      lineinfile:
        path: "{{ nexus_install_dir }}/nexus/bin/nexus"
        regexp: '^#INSTALL4J_JAVA_HOME_OVERRIDE='
        line: 'INSTALL4J_JAVA_HOME_OVERRIDE=/usr/lib/jvm/java-{{ java_version }}-openjdk-amd64'
        insertafter: '^#INSTALL4J_JAVA_HOME_OVERRIDE='

    - name: Create script to run Nexus
      copy:
        dest: /usr/local/bin/run_nexus.sh
        content: |
          #!/bin/bash
          exec {{ nexus_install_dir }}/nexus/bin/nexus run

    - name: Make run script executable
      file:
        path: /usr/local/bin/run_nexus.sh
        mode: '0755'

    - name: Add environment variables for Nexus
      copy:
        dest: /etc/profile.d/nexus.sh
        content: |
          export JAVA_HOME=/usr/lib/jvm/java-{{ java_version }}-openjdk-amd64
          export NEXUS_HOME={{ nexus_install_dir }}/nexus
          export NEXUS_DATA={{ nexus_data_dir }}

    - name: Print instructions
      debug:
        msg: |
          To run Nexus Repository Manager, execute the following command:
          /usr/local/bin/run_nexus.sh

    - name: Start Nexus service
      shell: "nohup /usr/local/bin/run_nexus.sh > /var/log/nexus.log 2>&1 &"
      async: 60
      poll: 0

    - name: Wait for Nexus to start
      wait_for:
        port: 8081
        state: started
        delay: 10
        timeout: 60 # 3 minutes
      ignore_errors: yes

    - name: Debug log output
      command: cat /var/log/nexus.log
      register: nexus_log

    - name: Show Nexus log
      debug:
        msg: "{{ nexus_log.stdout }}"

