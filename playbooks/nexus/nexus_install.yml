---
- name: Install Sonatype Nexus
  hosts: aella-xplatform-mpoc-poc-ansible-dev-ec2
  become: yes

  vars:
    nexus_user: "nexus"
    nexus_service: "nexus.service"

  tasks:
    - name: Create Nexus user
      user:
        name: "{{ nexus_user }}"
        system: yes
        shell: /bin/false

    - name: Create directory for Nexus installation
      file:
        path: /apps/nexus
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Download Latest Nexus version 
      get_url:
        url: "https://download.sonatype.com/nexus/3/latest-unix.tar.gz" 
        dest: /apps/nexus/nexus.tar.gz

    - name: Extract Nexus Archive
      unarchive:
        src: /apps/nexus/nexus.tar.gz
        dest: /apps/nexus
        remote_src: yes

    - name: List contents of /apps/nexus directory
      command: ls -l /apps/nexus
      register: dir_listing

    - name: Debug dir listing
      debug:
        var: dir_listing.stdout_lines

    - name: Move extracted Nexus files
      command: mv /apps/nexus/nexus-*/ /apps/nexus/
      when: "'nexus-' in item"
      with_items: "{{ dir_listing.stdout_lines }}"

    - name: Set Nexus Ownership
      file:
        path: /apps/nexus
        owner: "{{ nexus_user }}"
        group: "{{ nexus_user }}"
        recurse: yes

    - name: Create Nexus systemd service file
      copy:
        dest: /etc/systemd/system/nexus.service
        content: |
          [Unit]
          Description=nexus service
          After=network.target

          [Service]
          Type=forking
          ExecStart=/apps/nexus/bin/nexus start
          ExecStop=/apps/nexus/bin/nexus stop
          User={{ nexus_user }}
          Restart=on-abort

          [Install]
          WantedBy=multi-user.target

    - name: Reload systemd daemon
      systemd:
        daemon_reload: yes

    - name: Start Nexus Service
      systemd:
        name: nexus
        state: started
        enabled: yes
