---
- name: Install Sonatype Nexus
  hosts: aella-xplatform-mpoc-poc-ansible-dev-ec2
  become: yes

  tasks:
    - name: Update YUM package manager repositories
      yum:
        name: '*'
        state: latest

    - name: Enable the Amazon Linux extras repository for Java 11
      command: sudo amazon-linux-extras install java-openjdk11 -y

    - name: Create Nexus user
      user:
        name: nexus
        shell: /bin/bash

    - name: Download Nexus
      get_url:
        url: https://download.sonatype.com/nexus/3/latest-unix.tar.gz
        dest: /tmp/nexus.tar.gz

    - name: Create directory for Nexus
      file:
        path: /apps/nexus
        state: directory
        owner: nexus
        group: nexus

    - name: Extract Nexus
      unarchive:
        src: /tmp/nexus.tar.gz
        dest: /apps/nexus
        remote_src: yes

    - name: Set Nexus ownership
      command: chown -R nexus:nexus /apps/nexus

    - name: Create Nexus data directory
      file:
        path: /opt/sonatype-work
        state: directory
        owner: nexus
        group: nexus

    - name: Find the extracted Nexus directory
      find:
        paths: /apps/nexus/
        patterns: 'nexus-*'
        use_regex: yes
      register: nexus_dir

    - name: Set JAVA_HOME in Nexus configuration
      lineinfile:
        path: "{{ item.path }}/bin/nexus.rc"
        line: 'export JAVA_HOME=/usr/lib/jvm/java-11-openjdk'
      with_items: "{{ nexus_dir.files }}"

    - name: Configure Nexus as a service
      copy:
        content: |
          [Unit]
          Description=nexus service
          After=network.target

          [Service]
          Type=forking
          LimitNOFILE=65536
          ExecStart={{ item.path }}/bin/nexus start
          ExecStop={{ item.path }}/bin/nexus stop
          User=nexus
          Restart=on-abort

          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/nexus.service
        owner: root
        group: root
        mode: '0644'
      with_items: "{{ nexus_dir.files }}"

    - name: Reload systemd to apply Nexus service
      command: systemctl daemon-reload

    - name: Start Nexus service
      systemd:
        name: nexus
        enabled: yes
        state: started

    - name: Check Nexus service status
      command: systemctl status nexus.service
      register: nexus_status

    - name: Debug Nexus service status
      debug:
        var: nexus_status.stdout_lines
