---
- name: Install Sonatype Nexus
  hosts: aella-xplatform-mpoc-poc-ansible-dev-ec2
  become: yes

  vars:
    nexus_home: "/apps/nexus"
    nexus_data: "/apps/sonatype-work/nexus3"
    nexus_user: "nexus"
    nexus_service: "nexus.service"

  tasks:
    - name: Install Java
      apt:
        name: openjdk-11-jdk
        state: present
      when: ansible_os_family == 'Debian'

    - name: Install Java
      yum:
        name: java-11-openjdk
        state: present
      when: ansible_os_family == 'RedHat'

    - name: Create Nexus user
      user:
        name: "{{ nexus_user }}"
        system: yes
        shell: /bin/false

    - name: Create directories for Nexus installation
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ nexus_user }}"
        group: "{{ nexus_user }}"
        mode: '0755'
      with_items:
        - "{{ nexus_home }}"
        - "{{ nexus_data }}"

    - name: Download Latest Nexus version 
      get_url:
        url: "https://download.sonatype.com/nexus/3/latest-unix.tar.gz" 
        dest: /apps/nexus/nexus.tar.gz

    - name: Extract Nexus Archive
      unarchive:
        src: /apps/nexus/nexus.tar.gz
        dest: /apps/nexus
        remote_src: yes

    - name: Find extracted Nexus directory
      shell: "ls -d /apps/nexus/nexus-*/"
      register: nexus_extracted_dir
      ignore_errors: yes

    - name: Debug extracted directory
      debug:
        var: nexus_extracted_dir.stdout_lines

    - name: Move extracted Nexus files
      shell: "mv {{ item }}* /apps/nexus/"
      with_items: "{{ nexus_extracted_dir.stdout_lines }}"
      when: nexus_extracted_dir.stdout_lines is defined and nexus_extracted_dir.stdout_lines|length > 0

    - name: Remove extracted directory
      file:
        path: "{{ item }}"
        state: absent
      with_items: "{{ nexus_extracted_dir.stdout_lines }}"
      when: nexus_extracted_dir.stdout_lines is defined and nexus_extracted_dir.stdout_lines|length > 0

    - name: Set Nexus Ownership
      file:
        path: /apps/nexus
        owner: "{{ nexus_user }}"
        group: "{{ nexus_user }}"
        recurse: yes

    - name: Configure Nexus data directory
      lineinfile:
        path: /apps/nexus/bin/nexus.vmoptions
        line: "-Dkaraf.data={{ nexus_data }}"
        create: yes

    - name: Create Nexus systemd service file
      copy:
        dest: /etc/systemd/system/{{ nexus_service }}
        content: |
          [Unit]
          Description=nexus service
          After=network.target

          [Service]
          Type=forking
          ExecStart=/apps/nexus/bin/nexus start
          ExecStop=/apps/nexus/bin/nexus stop
          User={{ nexus_user }}
          Restart=on-abort

          [Install]
          WantedBy=multi-user.target

    - name: Reload systemd daemon
      systemd:
        daemon_reload: yes

    - name: Start Nexus Service
      systemd:
        name: nexus
        state: started
        enabled: yes
